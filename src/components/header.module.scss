@import "../theme";

.link {
    display: inline-flex;
    color: $primary-color;
    text-decoration: none;
    font-family: Tahoma, Geneva, sans-serif;
    transition: 0.2s;
}

.horizontal {
    .link:nth-child(n+1):nth-last-child(n+2) {
        margin-right: 1em;
    }
}

.link:hover{
    color:$tetrad-4;
}

.navStyle {
    margin: 0 auto;
    max-width: $site-content-width;
    padding: 1.5rem 1.0rem;
    display: flex;
    justify-content: space-between;
}

.headerStyle {
    background: $primary-color-pale;
    margin-bottom: .45rem;
    position: sticky;
    top: 0;
    z-index: 2;

    hr {
        width: $site-content-width;
        margin: auto;
    }
}

.logo {
    fill: $primary-color;
    stroke-width:.26458;
    transition: 0.2s;
}

.logo:hover {
    fill:$tetrad-4;
}

.desktopMenu {
    @media only screen and (max-width: $minMD - 1px) {
        display: none;
    }
}

.mobileMenu {
    @media only screen and (min-width: $minMD) {
        display: none;
    }

    input[type="checkbox"]{
        display:none;
    }

    label {
        position: relative;
        z-index: 3;
    }

    label span {
        display: block;
        margin:4px;
        height: 4px;
        width:60px;
        background: $primary-color;
        border-radius: 9px;
        transition: 0.2s;
    }

    $rotation: 45deg;
    .topRotation {
        $translation-x: 14px;
        $translation-y: 12px;
        -webkit-transform: rotate($rotation) translate($translation-x, $translation-y);
        -moz-transform: rotate($rotation) translate($translation-x, $translation-y);
        -o-transform: rotate($rotation) translate($translation-x, $translation-y);
        transform: rotate($rotation) translate($translation-x, $translation-y);
      }

    .middleRotation {
        opacity: 0;
    }

    .bottomRotation {
        $translation-x: 0px;
        $translation-y: 3px;
        -webkit-transform: rotate(-$rotation) translate($translation-x, $translation-y);
        -moz-transform: rotate(-$rotation) translate($translation-x, $translation-y);
        -o-transform: rotate(-$rotation) translate($translation-x, $translation-y);
        transform: rotate(-$rotation) translate($translation-x, $translation-y);
    }

    .overlay {
        position: fixed; /* Sit on top of the page content */
        width: 100%; /* Full width (cover the whole page) */
        height: 100%; /* Full height (cover the whole page) */
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: white;
        z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
        cursor: pointer; /* Add a pointer on hover */
    }

    .vertical {
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        height: 100vh;
        justify-content: center;

        .link {
            font-size: 200%;
            margin-bottom: 2em;
        }
    }
}